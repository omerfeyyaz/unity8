import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable LightDM 0.1 plugins'

Module {
    Component {
        name: "Greeter"
        prototype: "QObject"
        exports: ["LightDM/Greeter 0.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "active"; type: "bool" }
        Property { name: "authenticated"; type: "bool"; isReadonly: true }
        Property { name: "authenticationUser"; type: "string"; isReadonly: true }
        Property { name: "promptless"; type: "bool"; isReadonly: true }
        Signal {
            name: "showMessage"
            Parameter { name: "text"; type: "string" }
            Parameter { name: "isError"; type: "bool" }
        }
        Signal {
            name: "showPrompt"
            Parameter { name: "text"; type: "string" }
            Parameter { name: "isSecret"; type: "bool" }
            Parameter { name: "isDefaultPrompt"; type: "bool" }
        }
        Signal { name: "authenticationComplete" }
        Signal {
            name: "authenticationUserChanged"
            Parameter { name: "user"; type: "string" }
        }
        Signal { name: "isActiveChanged" }
        Signal { name: "isAuthenticatedChanged" }
        Signal { name: "showGreeter" }
        Signal { name: "hideGreeter" }
        Signal {
            name: "requestAuthenticationUser"
            Parameter { name: "user"; type: "string" }
        }
        Method {
            name: "authenticate"
            Parameter { name: "username"; type: "string" }
        }
        Method { name: "authenticate" }
        Method {
            name: "respond"
            Parameter { name: "response"; type: "string" }
        }
        Method {
            name: "startSessionSync"
            type: "bool"
            Parameter { name: "session"; type: "string" }
        }
        Method { name: "startSessionSync"; type: "bool" }
        Method {
            name: "setIsActive"
            Parameter { name: "isActive"; type: "bool" }
        }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
    }
    Component {
        name: "QLightDM::UsersModel"
        prototype: "QAbstractListModel"
        exports: ["LightDM/UserRoles 0.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "UserModelRoles"
            values: {
                "NameRole": 256,
                "RealNameRole": 257,
                "LoggedInRole": 258,
                "BackgroundRole": 259,
                "SessionRole": 260,
                "HasMessagesRole": 261,
                "ImagePathRole": 262,
                "BackgroundPathRole": 263
            }
        }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
    Component {
        name: "UnitySortFilterProxyModelQML"
        prototype: "QSortFilterProxyModel"
        Property { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        Property { name: "totalCount"; type: "int"; isReadonly: true }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "invertMatch"; type: "bool" }
        Signal {
            name: "invertMatchChanged"
            Parameter { type: "bool" }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "role"; type: "int" }
        }
        Method { name: "count"; type: "int" }
        Method {
            name: "findFirst"
            type: "int"
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "mapRowToSource"
            type: "int"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "mapFromSource"
            type: "int"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "mapToSource"
            type: "int"
            Parameter { name: "row"; type: "int" }
        }
    }
    Component {
        name: "UserMetricsOutput::ColorTheme"
        prototype: "QObject"
        Property { name: "start"; type: "QColor"; isReadonly: true }
        Property { name: "main"; type: "QColor"; isReadonly: true }
        Property { name: "end"; type: "QColor"; isReadonly: true }
        Signal {
            name: "startChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "mainChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "endChanged"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "UserMetricsOutput::UserMetrics"
        prototype: "QObject"
        exports: ["LightDM/Infographic 0.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "label"; type: "string"; isReadonly: true }
        Property { name: "username"; type: "string" }
        Property {
            name: "firstColor"
            type: "UserMetricsOutput::ColorTheme"
            isReadonly: true
            isPointer: true
        }
        Property {
            name: "secondColor"
            type: "UserMetricsOutput::ColorTheme"
            isReadonly: true
            isPointer: true
        }
        Property { name: "firstMonth"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Property { name: "secondMonth"; type: "QAbstractItemModel"; isReadonly: true; isPointer: true }
        Property { name: "currentDay"; type: "int"; isReadonly: true }
        Signal {
            name: "labelChanged"
            Parameter { name: "label"; type: "string" }
        }
        Signal {
            name: "usernameChanged"
            Parameter { name: "username"; type: "string" }
        }
        Signal {
            name: "firstColorChanged"
            Parameter { name: "color"; type: "ColorTheme"; isPointer: true }
        }
        Signal {
            name: "firstMonthChanged"
            Parameter { name: "firstMonth"; type: "QAbstractItemModel"; isPointer: true }
        }
        Signal {
            name: "currentDayChanged"
            Parameter { name: "currentDay"; type: "int" }
        }
        Signal {
            name: "secondColorChanged"
            Parameter { name: "color"; type: "ColorTheme"; isPointer: true }
        }
        Signal {
            name: "secondMonthChanged"
            Parameter { name: "secondMonth"; type: "QAbstractItemModel"; isPointer: true }
        }
        Signal { name: "nextDataSource" }
        Signal { name: "readyForDataChange" }
        Signal { name: "dataAboutToAppear" }
        Signal { name: "dataAppeared" }
        Signal { name: "dataAboutToChange" }
        Signal { name: "dataChanged" }
        Signal { name: "dataAboutToDisappear" }
        Signal { name: "dataDisappeared" }
        Method { name: "nextDataSourceSlot" }
        Method { name: "readyForDataChangeSlot" }
    }
    Component {
        name: "UsersModel"
        prototype: "UnitySortFilterProxyModelQML"
        exports: ["LightDM/Users 0.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
    }
}
