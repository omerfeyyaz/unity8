import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable Dash 0.1 plugins'

Module {
    Component {
        name: "AbstractDashView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Property { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "columnSpacing"; type: "double" }
        Property { name: "rowSpacing"; type: "double" }
        Property { name: "cacheBuffer"; type: "int" }
        Property { name: "displayMarginBeginning"; type: "double" }
        Property { name: "displayMarginEnd"; type: "double" }
    }
    Component {
        name: "HorizontalJournal"
        defaultProperty: "data"
        prototype: "AbstractDashView"
        exports: ["Dash/HorizontalJournal 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "rowHeight"; type: "double" }
    }
    Component {
        name: "ListViewWithPageHeader"
        defaultProperty: "flickableData"
        prototype: "QQuickFlickable"
        exports: ["Dash/ListViewWithPageHeader 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "model"; type: "QAbstractItemModel"; isPointer: true }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "pageHeader"; type: "QQuickItem"; isPointer: true }
        Property { name: "sectionDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sectionProperty"; type: "string" }
        Property { name: "forceNoClip"; type: "bool" }
        Property { name: "stickyHeaderHeight"; type: "int"; isReadonly: true }
        Property { name: "headerItemShownHeight"; type: "double"; isReadonly: true }
        Property { name: "cacheBuffer"; type: "int" }
        Signal { name: "headerChanged" }
        Method { name: "positionAtBeginning" }
        Method { name: "showHeader" }
        Method { name: "firstCreatedIndex"; type: "int" }
        Method { name: "createdItemCount"; type: "int" }
        Method {
            name: "item"
            type: "QQuickItem*"
            Parameter { name: "modelIndex"; type: "int" }
        }
        Method {
            name: "maximizeVisibleArea"
            type: "bool"
            Parameter { name: "modelIndex"; type: "int" }
        }
        Method {
            name: "maximizeVisibleArea"
            type: "bool"
            Parameter { name: "modelIndex"; type: "int" }
            Parameter { name: "itemHeight"; type: "int" }
        }
    }
    Component {
        name: "OrganicGrid"
        defaultProperty: "data"
        prototype: "AbstractDashView"
        exports: ["Dash/OrganicGrid 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "smallDelegateSize"; type: "QSizeF" }
        Property { name: "bigDelegateSize"; type: "QSizeF" }
    }
    Component {
        name: "VerticalJournal"
        defaultProperty: "data"
        prototype: "AbstractDashView"
        exports: ["Dash/VerticalJournal 0.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "columnWidth"; type: "double" }
    }
    Component {
        prototype: "QObject"
        name: "CardCreatorCache"
        exports: ["CardCreatorCache -1.-1"]
        exportMetaObjectRevisions: [-1]
        isComposite: true
        isCreatable: false
        isSingleton: true
        Property { name: "cache"; type: "QVariant" }
        Method {
            name: "getCardComponent"
            type: "QVariant"
            Parameter { name: "template"; type: "QVariant" }
            Parameter { name: "components"; type: "QVariant" }
        }
    }
}
