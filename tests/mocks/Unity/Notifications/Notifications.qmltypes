import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable Unity.Notifications 1.0 tests/mocks'

Module {
    Component {
        name: "ActionModel"
        prototype: "QStringListModel"
        exports: ["Unity.Notifications/ActionModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ActionsRoles"
            values: {
                "RoleActionLabel": 257,
                "RoleActionId": 258
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "append"
            Parameter { name: "id"; type: "string" }
            Parameter { name: "label"; type: "string" }
        }
    }
    Component {
        name: "MockNotification"
        prototype: "QObject"
        exports: ["Unity.Notifications/Notification 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "PlaceHolder": 0,
                "Confirmation": 1,
                "Ephemeral": 2,
                "Interactive": 3,
                "SnapDecision": 4
            }
        }
        Property { name: "summary"; type: "string" }
        Property { name: "body"; type: "string" }
        Property { name: "nid"; type: "int" }
        Property { name: "value"; type: "int" }
        Property { name: "icon"; type: "string" }
        Property { name: "secondaryIcon"; type: "string" }
        Property { name: "type"; type: "Type" }
        Property { name: "rawActions"; type: "QStringList" }
        Property { name: "actions"; type: "ActionModel"; isReadonly: true; isPointer: true }
        Property { name: "hints"; type: "QVariantMap" }
        Signal {
            name: "summaryChanged"
            Parameter { name: "summary"; type: "string" }
        }
        Signal {
            name: "bodyChanged"
            Parameter { name: "body"; type: "string" }
        }
        Signal {
            name: "idChanged"
            Parameter { name: "id"; type: "int" }
        }
        Signal {
            name: "valueChanged"
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "iconChanged"
            Parameter { name: "icon"; type: "string" }
        }
        Signal {
            name: "secondaryIconChanged"
            Parameter { name: "secondaryIcon"; type: "string" }
        }
        Signal {
            name: "typeChanged"
            Parameter { name: "type"; type: "Type" }
        }
        Signal {
            name: "actionsChanged"
            Parameter { name: "actions"; type: "QStringList" }
        }
        Signal {
            name: "hintsChanged"
            Parameter { name: "hints"; type: "QVariantMap" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "nid"; type: "int" }
        }
        Signal {
            name: "completed"
            Parameter { name: "nid"; type: "int" }
        }
        Signal {
            name: "actionInvoked"
            Parameter { name: "action"; type: "string" }
        }
        Method {
            name: "invokeAction"
            Parameter { name: "action"; type: "string" }
        }
        Method { name: "close" }
    }
    Component {
        name: "MockNotificationModel"
        prototype: "QAbstractListModel"
        exports: ["Unity.Notifications/NotificationModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal {
            name: "actionInvoked"
            Parameter { name: "action"; type: "string" }
        }
        Signal {
            name: "queueSizeChanged"
            Parameter { name: "newSize"; type: "int" }
        }
        Method {
            name: "onCompleted"
            Parameter { name: "id"; type: "int" }
        }
        Method {
            name: "append"
            Parameter { name: "n"; type: "MockNotification"; isPointer: true }
        }
        Method {
            name: "getRaw"
            type: "MockNotification*"
            Parameter { name: "notificationId"; type: "int" }
        }
        Method { name: "queued"; type: "int" }
        Method {
            name: "remove"
            Parameter { name: "id"; type: "int" }
        }
        Method { name: "removeSecond" }
    }
    Component { name: "QStringListModel"; prototype: "QAbstractListModel" }
}
